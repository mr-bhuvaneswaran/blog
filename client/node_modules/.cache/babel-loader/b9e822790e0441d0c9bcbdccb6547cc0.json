{"ast":null,"code":"import _classCallCheck from \"/home/bhuvanes/Desktop/Blogs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bhuvanes/Desktop/Blogs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bhuvanes/Desktop/Blogs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bhuvanes/Desktop/Blogs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bhuvanes/Desktop/Blogs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/bhuvanes/Desktop/Blogs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/bhuvanes/Desktop/Blogs/client/src/components/CommentBox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport { withStyles, TextField, Typography, Button, Paper, Divider } from '@material-ui/core';\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nvar CommentBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentBox, _React$Component);\n\n  function CommentBox(props) {\n    var _this;\n\n    _classCallCheck(this, CommentBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentBox).call(this, props));\n    _this.state = {\n      data: []\n    };\n    _this.handleCommentSubmit = _this.handleCommentSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentBox, [{\n    key: \"handleCommentSubmit\",\n    value: function handleCommentSubmit(e) {\n      var _this2 = this;\n\n      axios.put(\"/api/blog\", {\n        id: this.props.feed._id,\n        type: \"comment\",\n        comment: e\n      }).then(function (res) {\n        if (res.data.comments != null) _this2.setState({\n          data: res.data.comments\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.feed.comments\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"commentBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"display1\",\n        style: {\n          paddingTop: '10px',\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(CommentForm, {\n        onCommentSubmit: this.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(CommentList, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CommentBox;\n}(React.Component);\n\n;\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(CommentList, _React$Component2);\n\n  function CommentList() {\n    _classCallCheck(this, CommentList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommentList).apply(this, arguments));\n  }\n\n  _createClass(CommentList, [{\n    key: \"render\",\n    value: function render() {\n      var commentNodes = this.props.data.reverse().map(function (comment, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Comment, {\n          author: comment.author,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, comment.comment), React.createElement(Divider, {\n          inset: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: {\n          padding: '20px',\n          background: '#eeeeee'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, commentNodes));\n    }\n  }]);\n\n  return CommentList;\n}(React.Component);\n\n;\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(CommentForm, _React$Component3);\n\n  function CommentForm(props) {\n    var _this3;\n\n    _classCallCheck(this, CommentForm);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this3.state = {\n      comment: ''\n    };\n    _this3.handleCommentChange = _this3.handleCommentChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"handleCommentChange\",\n    value: function handleCommentChange(e) {\n      this.setState({\n        comment: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var comment = this.state.comment.trim();\n\n      if (!comment) {\n        return;\n      }\n\n      this.props.onCommentSubmit({\n        author: sessionStorage.getItem('uname'),\n        comment: comment,\n        date: Date.now()\n      });\n      this.setState({\n        comment: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        style: {\n          width: '50vw'\n        },\n        label: \"Write a Comment\",\n        multiline: true,\n        rows: \"5\",\n        rowsMax: \"5\",\n        value: this.state.comment,\n        onChange: this.handleCommentChange,\n        className: classNames.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"POST\")));\n    }\n  }]);\n\n  return CommentForm;\n}(React.Component);\n\n;\n\nvar Comment =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(Comment, _React$Component4);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comment).apply(this, arguments));\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"commentAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.props.author), React.createElement(\"p\", {\n        className: \"actualComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" -->  \", this.props.children));\n    }\n  }]);\n\n  return Comment;\n}(React.Component);\n\n;\nCommentBox.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CommentBox);","map":{"version":3,"sources":["/home/bhuvanes/Desktop/Blogs/client/src/components/CommentBox.js"],"names":["React","PropTypes","classNames","axios","withStyles","TextField","Typography","Button","Paper","Divider","styles","theme","CommentBox","props","state","data","handleCommentSubmit","bind","e","put","id","feed","_id","type","comment","then","res","comments","setState","catch","err","console","log","paddingTop","fontSize","marginTop","Component","CommentList","commentNodes","reverse","map","index","author","padding","background","CommentForm","handleCommentChange","handleSubmit","target","value","preventDefault","trim","onCommentSubmit","sessionStorage","getItem","date","Date","now","width","textField","Comment","children","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport axios from 'axios';\n\nimport { withStyles, TextField, Typography, Button, Paper, Divider } from '@material-ui/core';\n\nconst styles = theme => ({});\n\nclass CommentBox extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            data : []\n        };\n        this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n    }\n\n    handleCommentSubmit(e){\n        axios.put(`/api/blog`,{ id:this.props.feed._id, type:\"comment\", comment:e })\n        .then((res)=>{\n            if(res.data.comments != null)\n                this.setState({ data: res.data.comments})\n        }).catch((err)=>{\n            console.log(err);\n        });\n    }\n\n    componentDidMount(){\n        this.setState({data:this.props.feed.comments});\n    }\n\n    render() {\n        return (\n            <div className=\"commentBox\">\n                <Typography variant=\"display1\" style={{ paddingTop: '10px',fontSize: '20px'}}>Comments</Typography>\n                <CommentForm onCommentSubmit={this.handleCommentSubmit}/> \n                <div style={{marginTop:'10px'}}>\n                    <CommentList data={this.state.data}/>\n                </div>\n            </div>\n        );\n}\n};\n\nclass CommentList extends React.Component {\n    render() {\n        const commentNodes = this.props.data.reverse().map((comment,index)=>{\n            return (\n                    <div key={index}>\n                    <Comment author={comment.author} key={index} >\n                        {comment.comment}\n                    </Comment>\n\n                    <Divider inset />\n                    </div>\n                );\n        })\n        return (\n            <div>\n                <Paper style={{ padding: '20px', background : '#eeeeee'}}>\n                    {commentNodes}\n                </Paper>\n            </div>\n        );\n    }\n};\n    \n\nclass CommentForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            comment:''\n        };\n        this.handleCommentChange = this.handleCommentChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleCommentChange(e){\n        this.setState({\n            comment: e.target.value\n        });\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        const comment = this.state.comment.trim();\n        if(!comment){\n            return;\n        }\n        this.props.onCommentSubmit({author:sessionStorage.getItem('uname'),comment:comment, date:Date.now()});\n        this.setState({comment:''});\n    }\n    render() {\n        return (\n            <form>\n            <TextField style={{ width: '50vw'}}\n                label=\"Write a Comment\"\n                multiline\n                rows = \"5\"\n                rowsMax=\"5\"\n                value={this.state.comment}\n                onChange={this.handleCommentChange}\n                className={classNames.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n            <div>\n                <Button onClick={this.handleSubmit}  variant=\"contained\" color=\"primary\" >\n                    POST\n                </Button>\n            </div>\n            </form>\n        );\n    }\n};\nclass Comment extends React.Component {\n    render() {        \n        return (\n            <div className=\"comment\">\n                <h3 className=\"commentAuthor\">\n                    {this.props.author}\n                </h3>\n            <p className=\"actualComment\"> -->  {this.props.children}</p>\n            </div>\n        );\n    }\n};\n\n\nCommentBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(CommentBox);"]},"metadata":{},"sourceType":"module"}